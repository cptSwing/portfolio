@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --parallax-vertical: 0;
    --parallax-horizontal: 0;
    --parallax-transition: 1.5s cubic-bezier(0.05, 0.5, 0, 1);
}

.svg-background-image {
    background-image: url(src/assets/bg_flattened.svg);
    background-size: cover;
}

/* From https://css-tip.com/corner-only-border-image/ .. */
.nav-card-border-base {
    --s: 20px; /* the size on the corner */
    --t: 2px; /* the thickness of the border */
    --color: theme(colors.gray.400 / 50%);

    outline: var(--t) solid var(--color);
    outline-offset: calc(-1 * var(--t));
    mask: conic-gradient(at var(--s) var(--s), #0000 75%, #000 0) 0 0 / calc(100% - var(--s)) calc(100% - var(--s));
}

.after\:nav-card-border-base:after {
    @apply nav-card-border-base;
}

.nav-card-border-color-change {
    outline-color: theme(colors.gray.500);
}

.after\:nav-card-border-color-change:after {
    @apply nav-card-border-color-change;
}

.hover\:after\:nav-card-border-color-change:hover:after {
    @apply nav-card-border-color-change;
}

.peer:checked ~ .peer-checked\:after\:nav-card-border-color-change:after {
    outline-color: theme(colors.gray.700);
}

.nav-card-border {
    @apply peer-checked:after:nav-card-border-color-change after:nav-card-border-base hover:after:nav-card-border-color-change after:absolute after:left-2 after:top-2 after:size-[calc(100%-(2*theme(spacing.2)))] after:rounded-sm after:transition-[outline-color] after:duration-300;
}

/* Parallax Stuff: */

.parallax-transform {
    transform: rotateX(var(--parallax-horizontal)) rotateY(var(--parallax-vertical));
    transition: transform var(--parallax-transition);
}

.parallax-bg-clip {
    clip-path: polygon(
        0% 0% /* top-left */,
        0% 100% /* bottom-left */,
        7.5% 100% /* start-inner (bottom-leftish) */,
        7.5% 7.5% /* inner-top-left */,
        92.5% 7.5% /* inner-top-right */,
        92.5% 92.5% /* inner-bottom-right */,
        0 92.5% /* end-inner (left 0, bottom) */,
        7.5% 100% /* end-outer (same as start-inner) */,
        100% 100% /* bottom-right */,
        100% 0% /* top-right */
    );
}

.parallax-border-animated {
    border-image: url(src/assets/border-animated.svg) 1;
}

.shadow-inner-svg {
    filter: url(src/assets/filters.svg#shadow2);
}

.\!shadow-inner-svg-none {
    filter: none !important;
}

.scrollbar-gutter {
    /* scrollbar-gutter: both-edges; */
    scrollbar-gutter: stable both-edges;
}

.bloom-svg {
    /* filter: saturate(200%) url(src/assets/filters.svg#bloom-svg-filter); */
    @apply [filter:saturate(200%)_url(src/assets/filters.svg#bloom-svg-filter)];
}

/* Classes necessary for CSSTransition: */

/* .frame-transition-appear {
    @apply -translate-x-full;
}

.frame-transition-appear-active {
    @apply translate-x-0 transition-transform duration-[2000ms];
}

.frame-transition-appear-done {
    @apply translate-x-0;
} */

.frame-transition-enter {
    @apply -translate-x-full;
}

.frame-transition-enter-active {
    @apply translate-x-0 transition-transform;
}

.frame-transition-enter-done {
    @apply translate-x-0;
}

.frame-transition-exit {
    @apply translate-x-0;
}

.frame-transition-exit-active {
    @apply -translate-x-full transition-transform;
}

.frame-transition-exit-done {
    @apply -translate-x-full;
}

.translateZ-0 {
    transform: translateZ(0);
}

.translateZ-2 {
    transform: translateZ(0.5rem);
}

.translateZ-4 {
    transform: translateZ(1rem);
}

.translateZ-8 {
    transform: translateZ(2rem);
}

.-translateZ-2 {
    transform: translateZ(-0.5rem);
}

.-translateZ-4 {
    transform: translateZ(-1rem);
}

.-translateZ-8 {
    transform: translateZ(-2rem);
}

.-translateZ-400 {
    transform: translateZ(-100rem);
}

/* Default classes from Vite default content: */

.logo {
    height: 6em;
    padding: 1.5em;
    will-change: filter;
    transition: filter 300ms;
}
.logo:hover {
    filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
    filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@media (prefers-reduced-motion: no-preference) {
    a:nth-of-type(2) .logo {
        animation: logo-spin infinite 20s linear;
    }
}

.card {
    padding: 2em;
}

.read-the-docs {
    color: #888;
}
