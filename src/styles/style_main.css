@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    a {
        @apply text-palette-accent-900 hover:underline;
    }

    a:visited {
        @apply brightness-50;
    }
}

@layer components {
    /* Adapted from https://css-tip.com/corner-only-border-image/ : */
    .nav-card-corners {
        @apply [--corner-inset:theme(spacing.2)] [--corner-outline-color:theme(colors.palette.primary.100)] [--corner-size:theme(spacing.2)] [--corner-thickness:theme(spacing[0.5])];
        @apply [mask:conic-gradient(at_var(--corner-size)_var(--corner-size),_theme(colors.transparent)_75%,_theme(colors.black)_0)_0_0_/_calc(100%-var(--corner-size))_calc(100%-var(--corner-size))];
        @apply [clip-path:polygon(0_0,_100%_0,_100%_100%,_var(--corner-inset)_100%,_0_var(--corner-inset))]; /* Cut bottom left corner */
        @apply pointer-events-none absolute bottom-[--corner-inset] left-[--corner-inset] right-[--corner-inset] top-[--corner-inset] outline outline-[length:--corner-thickness] outline-offset-[calc(-1*var(--corner-thickness))] outline-[color:--corner-outline-color];
        @apply hover:[--corner-outline-color:theme(colors.palette.primary.300)];
    }

    .fake-border-bg {
        @apply [--fake-border-color:theme(colors.gray.500/50%)] [--fake-border-width-side:calc(theme(spacing.1)/2)];
        @apply absolute -bottom-[--fake-border-width-side] -left-[--fake-border-width-side] -right-[--fake-border-width-side] -top-[--fake-border-width-side] bg-gradient-to-r from-[--fake-border-color] to-[--fake-border-color];
    }
}

@layer utilities {
    .writing-mode-vert-lr {
        writing-mode: vertical-lr;
    }

    .writing-mode-vert-rl {
        writing-mode: vertical-rl;
    }

    .scroll-gutter-both {
        scrollbar-gutter: stable both-edges;
    }

    .scroll-gutter {
        scrollbar-gutter: stable;
    }

    .perspective-1000px {
        perspective: 1000px;
    }

    .parallax-transform {
        transform: translateZ(var(--parallax-translateZ)) rotate3d(1, 0, 0, var(--parallax-horizontal)) rotate3d(0, 1, 0, var(--parallax-vertical));
        transform-style: preserve-3d;
        transition: transform 1.5s cubic-bezier(0.05, 0.5, 0, 1);
    }
}

:root {
    --parallax-translateZ: 4rem;
    --parallax-vertical: 0;
    --parallax-horizontal: 0;

    --bg-stroke-max-opacity: 0.666;
}

#root {
    @apply fixed h-dvh w-dvw overflow-hidden bg-palette-utility-bg text-left text-palette-utility-text scrollbar-track-transparent scrollbar-thumb-gray-800/15;
}

.nav-unchecked-width {
    @apply w-3/4 sm:w-2/3 md:w-1/2 lg:w-1/3 xl:w-1/4;
    /* @apply max-w-[90%] sm:max-w-[80%] md:max-w-[75%] lg:max-w-[66.666%] xl:max-w-[50%]; */
}

.nav-checked-width {
    @apply w-[95%] sm:w-[90%] md:w-4/5 lg:w-3/4 xl:w-2/3;
    /* @apply max-w-[95%] sm:max-w-[90%] md:max-w-[80%] lg:max-w-[75%] xl:max-w-[66.666%]; */
}

@keyframes bg-dash {
    to {
        stroke-dashoffset: 0;
        stroke-dasharray: 0.5;
        stroke-opacity: var(--bg-stroke-max-opacity);
        stroke-width: 0.1;
    }
}

.shadow-inner-svg {
    filter: url(src/assets/filters.svg#shadow2);
}

.\!shadow-inner-svg-none {
    filter: none !important;
}

.bloom-svg {
    /* filter: saturate(200%) url(src/assets/filters.svg#bloom-svg-filter); */
    @apply [filter:saturate(200%)_url(src/assets/filters.svg#bloom-svg-filter)];
}

/* Classes necessary for CSSTransition: */

/* .frame-transition-appear {
    @apply -translate-x-full;
}

.frame-transition-appear-active {
    @apply translate-x-0 transition-transform duration-[2000ms];
}

.frame-transition-appear-done {
    @apply translate-x-0;
} */

.frame-transition-enter {
    @apply -translate-x-full;
}

.frame-transition-enter-active {
    @apply translate-x-0 transition-transform;
}

.frame-transition-enter-done {
    @apply translate-x-0;
}

.frame-transition-exit {
    @apply translate-x-0;
}

.frame-transition-exit-active {
    @apply -translate-x-full transition-transform;
}

.frame-transition-exit-done {
    @apply -translate-x-full;
}

/* Default classes from Vite default content: */

.logo {
    height: 6em;
    padding: 1.5em;
    will-change: filter;
    transition: filter 300ms;
}
.logo:hover {
    filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
    filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@media (prefers-reduced-motion: no-preference) {
    a:nth-of-type(2) .logo {
        animation: logo-spin infinite 20s linear;
    }
}

.card {
    padding: 2em;
}

.read-the-docs {
    color: #888;
}
